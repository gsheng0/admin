#!/usr/bin/bash
LEEWAY_SECONDS=5
VALID_APPS="svc notes bird rgscalc wfmon flappy"

########## TODO: npm status stop not working properly. need lps to get to the bottom of the process
########## TODO: feature: auto restart 

## -----------------------------------------------------------------------------------
## is_running
## -----------------------------------------------------------------------------------
function is_running {
	if [[ -e $pid_file ]] ; then 
		if ps -ef | grep $(cat $pid_file) | grep -v grep ; then 
			return 0
		else 
			return 1
		fi
	else
		return 1
	fi
}

## -----------------------------------------------------------------------------------
## validate_pid
## -----------------------------------------------------------------------------------
function validate_pid {
	echo $pid $(pwd) ${pid_file}
	echo $pid | tee ${pid_file} | xargs echo "shell process id: "
	sleep $LEEWAY_SECONDS 
	if ! is_running ; then 
		echo 'unable to start $app_name'
	fi
}
## -----------------------------------------------------------------------------------
## get_port
## -----------------------------------------------------------------------------------
function get_port { 
 	case $app_name in 
		bird 	) export PORT=3001 ;;
		notes 	) export PORT=3002 ;;
		rgscalc ) export PORT=3003 ;;
		wfmon	) export PORT=3004 ;;
		flappy	) export PORT=2001 ;;
	esac
}
## -----------------------------------------------------------------------------------
## start_node_app_use_serve 
## -----------------------------------------------------------------------------------
function start_node_app_use_serve {
	get_port
	if [[ -e $app_name ]]; then 
		serve -s $app_name -l $PORT > ${log_file} 2>&1 &
		cd - > /dev/null
		pid=$!
		validate_pid 
	else
		echo "$app_name does not exist."
		exit 1
	fi
}
## -----------------------------------------------------------------------------------
## start_node_app_use_npm 
## -----------------------------------------------------------------------------------
function start_node_app_use_npm {
	NODE_ENV=production
	get_port
	if cd $app_name ; then 
		npm start > ${log_file} 2>&1 &
		cd - > /dev/null
		pid=$!
		validate_pid 
	else
		echo "$app_name does not exist."
		exit 1
	fi
}
## -----------------------------------------------------------------------------------
## start_services 
## -----------------------------------------------------------------------------------
function start_services {
	if [[ -e svc/services.jar ]]; then 
		. svc.env
		java -jar $app_name/services.jar > $log_file 2>&1 &
		pid=$!
		validate_pid $pid
	else
		echo "services does not exist."
		exit 1
	fi
}
## -----------------------------------------------------------------------------------
##			M A I N 
## -----------------------------------------------------------------------------------
function main {
  pid_file=${currdir}/${app_name}.pid
  log_file=${currdir}/${app_name}.log
  echo "app_name=$app_name pid_file=$pid_file log_file=$log_file"

  case $action in 
	start ) if is_running ; then 
			echo "$app_name is already running"
		else
			case $app_name in 
				notes | bird | rgscalc | wfmon ) 
					start_node_app_use_serve ;;	
				flappy ) 
					start_node_app_use_npm ;;	
				svc ) 
					start_services ;; 
				* ) 	
					echo "valid apps: $VALID_APPS" 
					exit 1
			esac
		fi
	;;
	status ) if is_running ; then 
			echo "-------------------------------"
			echo "running."
		else
			echo "-------------------------------"
			echo "NOT running."
		fi
		echo "------------------------------------------------------------------------"
	;;
	stop )	if is_running ; then 
			echo "killing $app_name processes......"
			ps -ef | grep $(cat $pid_file) | awk '{ print $2 }' | xargs kill | tee
			sleep $LEEWAY_SECONDS
			if is_running ; then 
				echo 'unable to kill......'
			else
				rm -f $pid_file
			fi
		else
			echo "$app_name is NOT running."
		fi
	;;
	* ) 	echo "valid actions: start | status | s/top "
		exit 1
	;;
  esac
}

## 
## R U N 
##

currdir=$(pwd)
action=${1?missing action}
case $action in 
	status ) app_name=${2-all} ;;		### status works with one app or all apps (not specify = all)
	* ) app_name=${2?missing app name} ;;  	### start/stop only works with one app at a time 
esac

case $app_name in 
	all )
		for app in $VALID_APPS ; do
			app_name=$app
			##echo main $action $app_name
			main 
		done
		;;
	* ) 
		if echo $VALID_APPS | grep $app_name > /dev/null; then
			##echo main $action $app_name
			main 
		else
			echo "valid apps are: $VALID_APPS"
		fi
		;;
esac

